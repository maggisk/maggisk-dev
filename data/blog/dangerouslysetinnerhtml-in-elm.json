{
  "type": "blog",
  "date": "2020-02-12T18:10:52.513Z",
  "title": "dangerouslySetInnerHTML in Elm",
  "body": "I love the elm language, but sometimes I'm baffled by the decisions made by the authors. How can you have the skill and experience to create something amazing like elm, yet [not realize](https://github.com/elm/html/issues/172) that there are plenty of valid reasons to want to render html provided by the server. Displaying html created using a rich text editor is one very common scenario. Every major web framework provides this feature, yet it was removed from elm.\n\nThere are lots of really ugly suggestions in that issue thread, yet no fully working code examples of how to solve this. So here it is, the least ugly solution using [custom elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements).\n\nAdd this custom element to your javascript.\n```javascript\nif (window.customElements) {\n    customElements.define(\n        \"elm-innerhtml\",\n        class ElmInnerHTML extends HTMLElement {\n            static get observedAttributes() {\n                return [\"html\"];\n            }\n\n            attributeChangedCallback(name, oldValue, newValue) {\n                if (name == \"html\")\n                    this.innerHTML = newValue;\n            }\n        }\n    );\n}\n```\n\nAnd a wrapper function on the elm side to use it\n```elm\nimport Html exposing (Html, node)\nimport Html.Attributes exposing (attribute)\n\n\ndangerouslySetInnerHtml : String -> Html msg\ndangerouslySetInnerHtml html =\n    node \"elm-innerhtml\" [ attribute \"html\" html ] []\n```\n\nWorks in every major browser except IE11 and below."
}